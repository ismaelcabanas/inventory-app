/*
 * This file is generated by jOOQ.
*/
package cabanas.garcia.ismael.inventory.infrastructure.repository.jooq.autogen.tables.records;


import cabanas.garcia.ismael.inventory.infrastructure.repository.jooq.autogen.tables.StoreRoom;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.3",
        "schema version:inventory_2018.02.22.1"
    },
    date = "2018-02-22T16:24:19.217Z",
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StoreRoomRecord extends UpdatableRecordImpl<StoreRoomRecord> implements Record2<String, String> {

    private static final long serialVersionUID = 698762895;

    /**
     * Setter for <code>inventory.store_room.sr_id</code>.
     */
    public void setSrId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>inventory.store_room.sr_id</code>.
     */
    public String getSrId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>inventory.store_room.sr_name</code>.
     */
    public void setSrName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>inventory.store_room.sr_name</code>.
     */
    public String getSrName() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<String, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<String, String> valuesRow() {
        return (Row2) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return StoreRoom.STORE_ROOM.SR_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return StoreRoom.STORE_ROOM.SR_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getSrId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getSrName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StoreRoomRecord value1(String value) {
        setSrId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StoreRoomRecord value2(String value) {
        setSrName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StoreRoomRecord values(String value1, String value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached StoreRoomRecord
     */
    public StoreRoomRecord() {
        super(StoreRoom.STORE_ROOM);
    }

    /**
     * Create a detached, initialised StoreRoomRecord
     */
    public StoreRoomRecord(String srId, String srName) {
        super(StoreRoom.STORE_ROOM);

        set(0, srId);
        set(1, srName);
    }
}
