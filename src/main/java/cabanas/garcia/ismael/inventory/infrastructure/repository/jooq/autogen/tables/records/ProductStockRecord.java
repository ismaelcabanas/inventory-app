/*
 * This file is generated by jOOQ.
*/
package cabanas.garcia.ismael.inventory.infrastructure.repository.jooq.autogen.tables.records;


import cabanas.garcia.ismael.inventory.infrastructure.repository.jooq.autogen.tables.ProductStock;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.3",
        "schema version:inventory_2018.02.26.1"
    },
    date = "2018-02-26T09:43:39.080Z",
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProductStockRecord extends UpdatableRecordImpl<ProductStockRecord> implements Record3<String, String, Integer> {

    private static final long serialVersionUID = -1903214024;

    /**
     * Setter for <code>inventory.product_stock.ps_id</code>.
     */
    public void setPsId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>inventory.product_stock.ps_id</code>.
     */
    public String getPsId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>inventory.product_stock.ps_product_id</code>.
     */
    public void setPsProductId(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>inventory.product_stock.ps_product_id</code>.
     */
    public String getPsProductId() {
        return (String) get(1);
    }

    /**
     * Setter for <code>inventory.product_stock.ps_stock</code>.
     */
    public void setPsStock(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>inventory.product_stock.ps_stock</code>.
     */
    public Integer getPsStock() {
        return (Integer) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<String, String, Integer> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<String, String, Integer> valuesRow() {
        return (Row3) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return ProductStock.PRODUCT_STOCK.PS_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return ProductStock.PRODUCT_STOCK.PS_PRODUCT_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return ProductStock.PRODUCT_STOCK.PS_STOCK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getPsId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getPsProductId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getPsStock();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProductStockRecord value1(String value) {
        setPsId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProductStockRecord value2(String value) {
        setPsProductId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProductStockRecord value3(Integer value) {
        setPsStock(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProductStockRecord values(String value1, String value2, Integer value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ProductStockRecord
     */
    public ProductStockRecord() {
        super(ProductStock.PRODUCT_STOCK);
    }

    /**
     * Create a detached, initialised ProductStockRecord
     */
    public ProductStockRecord(String psId, String psProductId, Integer psStock) {
        super(ProductStock.PRODUCT_STOCK);

        set(0, psId);
        set(1, psProductId);
        set(2, psStock);
    }
}
